{"ast":null,"code":"var _jsxFileName = \"/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const apiPath = 'http://localhost:3001/players';\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        const response = await fetch(apiPath); // Replace with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        // Sort players by highScore in descending order\n        const sortedPlayers = data.sort((a, b) => b.highScore - a.highScore);\n        setPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    };\n    fetchLeaderboardData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: player.highScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Leaderboard","_s","players","setPlayers","apiPath","fetchLeaderboardData","response","fetch","ok","Error","data","json","sortedPlayers","sort","a","b","highScore","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","username","_c","$RefreshReg$"],"sources":["/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Leaderboard = () => {\n  const [players, setPlayers] = useState([]);\n\n  const apiPath = 'http://localhost:3001/players';\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        const response = await fetch(apiPath); // Replace with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        // Sort players by highScore in descending order\n        const sortedPlayers = data.sort((a, b) => b.highScore - a.highScore);\n\n        setPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    };\n  \n    fetchLeaderboardData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Leaderboard</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Player</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          {players.map((player, index) => (\n            <tr key={index}>\n              <td>{player.username}</td>\n              <td>{player.highScore}</td> {/* Adjust this based on your data structure */}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,OAAO,GAAG,+BAA+B;EAE/CP,SAAS,CAAC,MAAM;IACd,MAAMQ,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC,CAAC,CAAC;QACvC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,aAAa,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,SAAS,GAAGF,CAAC,CAACE,SAAS,CAAC;QAEpEb,UAAU,CAACS,aAAa,CAAC;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC7E;IACF,CAAC;IAEDZ,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,eACEpB,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAAoB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfxB,OAAA;YAAAoB,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRxB,OAAA;QAAAoB,QAAA,EACGjB,OAAO,CAACsB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB3B,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAAoB,QAAA,EAAKM,MAAM,CAACE;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BxB,OAAA;YAAAoB,QAAA,EAAKM,MAAM,CAACT;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,KAAC;QAAA,GAFrBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/CID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}