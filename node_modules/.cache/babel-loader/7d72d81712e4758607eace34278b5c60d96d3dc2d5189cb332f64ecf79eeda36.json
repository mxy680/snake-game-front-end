{"ast":null,"code":"var _jsxFileName = \"/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/Leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const navigate = useNavigate();\n  const apiPath = 'https://snake-game-j7eb.onrender.com/players';\n  const goHome = () => {\n    navigate('/menu'); // Navigate to the home route (adjust the route as needed)\n  };\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        const response = await fetch(apiPath); // Replace with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        // Sort players by highScore in descending order\n        const sortedPlayers = data.sort((a, b) => b.highScore - a.highScore).slice(0, 10); // Gets only the first 50 players\n\n        setPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    };\n    fetchLeaderboardData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"leaderboard-title\",\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"leaderboard-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.highScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 27\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goHome,\n      className: \"back-home\",\n      children: \"Back Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"RcGu4kkR8r5q/aqK6Rl3I0F0xuQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Leaderboard","_s","players","setPlayers","navigate","apiPath","goHome","fetchLeaderboardData","response","fetch","ok","Error","data","json","sortedPlayers","sort","a","b","highScore","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","username","onClick","_c","$RefreshReg$"],"sources":["/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/Leaderboard.css';\n\nconst Leaderboard = () => {\n  const [players, setPlayers] = useState([]);\n  const navigate = useNavigate();\n\n  const apiPath = 'https://snake-game-j7eb.onrender.com/players';\n\n  const goHome = () => {\n    navigate('/menu'); // Navigate to the home route (adjust the route as needed)\n  };\n\n  useEffect(() => {\n    const fetchLeaderboardData = async () => {\n      try {\n        const response = await fetch(apiPath); // Replace with your actual API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n\n        // Sort players by highScore in descending order\n        const sortedPlayers = data\n          .sort((a, b) => b.highScore - a.highScore)\n          .slice(0, 10); // Gets only the first 50 players\n\n        setPlayers(sortedPlayers);\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    };\n  \n    fetchLeaderboardData();\n  }, []);\n\n  return (\n    <div className=\"leaderboard-container\">\n      <h1 className=\"leaderboard-title\">Leaderboard</h1>\n      <div className=\"leaderboard-table-container\">\n          <table className=\"leaderboard-table\">\n              <thead>\n                  <tr>\n                      <th>Player</th>\n                      <th>Score</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {players.map((player, index) => (\n                      <tr key={index}>\n                          <td>{player.username}</td>\n                          <td>{player.highScore}</td> \n                      </tr>\n                  ))}\n              </tbody>\n          </table>\n      </div>\n      <button onClick={goHome} className=\"back-home\">Back Home</button>\n    </div>\n\n  );\n};\n\nexport default Leaderboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}