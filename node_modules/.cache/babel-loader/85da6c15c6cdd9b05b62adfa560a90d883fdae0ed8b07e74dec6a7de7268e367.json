{"ast":null,"code":"var _jsxFileName = \"/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 0,\n    y: 0\n  }]); // Snake initial position\n  const [food, setFood] = useState({\n    x: 5,\n    y: 5\n  }); // Food initial position\n  const [direction, setDirection] = useState('RIGHT');\n\n  // Update the snake's position\n  const moveSnake = useCallback(() => {\n    setSnake(snake => {\n      const newSnake = [...snake];\n      let head = {\n        ...newSnake[0]\n      };\n\n      // Update the head position based on direction\n      if (direction === 'RIGHT') head.x += 1;else if (direction === 'LEFT') head.x -= 1;else if (direction === 'UP') head.y -= 1;else if (direction === 'DOWN') head.y += 1;\n      newSnake.unshift(head); // Add new head\n      newSnake.pop(); // Remove tail\n\n      return newSnake;\n    });\n  }, [direction]);\n  useEffect(() => {\n    // Game loop\n    const gameLoop = setInterval(moveSnake, 200); // Move snake every 200ms\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n\n  // Handle key press for snake direction\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.keyCode) {\n        case 37:\n          // Left arrow\n          setDirection('LEFT');\n          break;\n        case 38:\n          // Up arrow\n          setDirection('UP');\n          break;\n        case 39:\n          // Right arrow\n          setDirection('RIGHT');\n          break;\n        case 40:\n          // Down arrow\n          setDirection('DOWN');\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  // Render the game\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"9/GoNnZwycB1zWN6rat9YHy5Z9s=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Game","_s","snake","setSnake","x","y","food","setFood","direction","setDirection","moveSnake","newSnake","head","unshift","pop","gameLoop","setInterval","clearInterval","handleKeyPress","e","keyCode","document","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst Game = () => {\n  const [snake, setSnake] = useState([{ x: 0, y: 0 }]); // Snake initial position\n  const [food, setFood] = useState({ x: 5, y: 5 }); // Food initial position\n  const [direction, setDirection] = useState('RIGHT');\n\n  // Update the snake's position\n  const moveSnake = useCallback(() => {\n    setSnake(snake => {\n      const newSnake = [...snake];\n      let head = { ...newSnake[0] };\n\n      // Update the head position based on direction\n      if (direction === 'RIGHT') head.x += 1;\n      else if (direction === 'LEFT') head.x -= 1;\n      else if (direction === 'UP') head.y -= 1;\n      else if (direction === 'DOWN') head.y += 1;\n\n      newSnake.unshift(head); // Add new head\n      newSnake.pop(); // Remove tail\n\n      return newSnake;\n    });\n  }, [direction]);\n\n  useEffect(() => {\n    // Game loop\n    const gameLoop = setInterval(moveSnake, 200); // Move snake every 200ms\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n\n  // Handle key press for snake direction\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.keyCode) {\n        case 37: // Left arrow\n          setDirection('LEFT');\n          break;\n        case 38: // Up arrow\n          setDirection('UP');\n          break;\n        case 39: // Right arrow\n          setDirection('RIGHT');\n          break;\n        case 40: // Down arrow\n          setDirection('DOWN');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  // Render the game\n  return (\n    <div>\n      <h1>Snake Game</h1>\n      <div className=\"game-area\">\n        {/* Render snake and food */}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}