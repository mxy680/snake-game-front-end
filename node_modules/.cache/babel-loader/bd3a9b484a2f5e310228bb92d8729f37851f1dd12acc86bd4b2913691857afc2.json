{"ast":null,"code":"var _jsxFileName = \"/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './styles/Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [snake, setSnake] = useState([{\n    x: 0,\n    y: 0\n  }]); // Snake initial position\n  const [food, setFood] = useState({\n    x: 5,\n    y: 5\n  }); // Food initial position\n  const [direction, setDirection] = useState('RIGHT');\n  const moveSnake = useCallback(() => {\n    setSnake(snake => {\n      let newSnake = [...snake];\n      let head = {\n        ...newSnake[0]\n      };\n\n      // Update the head position based on direction\n      if (direction === 'RIGHT') head.x += 1;else if (direction === 'LEFT') head.x -= 1;else if (direction === 'UP') head.y -= 1;else if (direction === 'DOWN') head.y += 1;\n\n      // Check for collisions\n      const collision = checkCollision(head);\n      if (collision) {\n        alert('Game Over');\n        return [{\n          x: 0,\n          y: 0\n        }]; // Reset the snake\n      }\n\n      // Check if food is eaten\n      const foodEaten = eatFood(head);\n      if (!foodEaten) {\n        newSnake.pop(); // Remove tail only if food not eaten\n      }\n      newSnake.unshift(head); // Add new head\n\n      return newSnake;\n    });\n  }, [direction, snake, food]);\n  useEffect(() => {\n    // Game loop\n    const gameLoop = setInterval(moveSnake, 200); // Move snake every 200ms\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n\n  // Handle key press for snake direction\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.keyCode) {\n        case 37:\n          // Left arrow\n          setDirection('LEFT');\n          break;\n        case 38:\n          // Up arrow\n          setDirection('UP');\n          break;\n        case 39:\n          // Right arrow\n          setDirection('RIGHT');\n          break;\n        case 40:\n          // Down arrow\n          setDirection('DOWN');\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, []);\n  const checkCollision = head => {\n    // Check boundary collision\n    if (head.x >= 20 || head.x < 0 || head.y >= 20 || head.y < 0) {\n      return true;\n    }\n\n    // Check self collision\n    for (const segment of snake) {\n      if (head.x === segment.x && head.y === segment.y) {\n        return true;\n      }\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [snake.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"snake-segment\",\n        style: {\n          left: `${segment.x * 20}px`,\n          top: `${segment.y * 20}px`\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"food\",\n        style: {\n          left: `${food.x * 20}px`,\n          top: `${food.y * 20}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"9/GoNnZwycB1zWN6rat9YHy5Z9s=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Game","_s","snake","setSnake","x","y","food","setFood","direction","setDirection","moveSnake","newSnake","head","collision","checkCollision","alert","foodEaten","eatFood","pop","unshift","gameLoop","setInterval","clearInterval","handleKeyPress","e","keyCode","document","addEventListener","removeEventListener","segment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","style","left","top","_c","$RefreshReg$"],"sources":["/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './styles/Game.css'\n\nconst Game = () => {\n  const [snake, setSnake] = useState([{ x: 0, y: 0 }]); // Snake initial position\n  const [food, setFood] = useState({ x: 5, y: 5 }); // Food initial position\n  const [direction, setDirection] = useState('RIGHT');\n\n  const moveSnake = useCallback(() => {\n    setSnake(snake => {\n      let newSnake = [...snake];\n      let head = { ...newSnake[0] };\n  \n      // Update the head position based on direction\n      if (direction === 'RIGHT') head.x += 1;\n      else if (direction === 'LEFT') head.x -= 1;\n      else if (direction === 'UP') head.y -= 1;\n      else if (direction === 'DOWN') head.y += 1;\n  \n      // Check for collisions\n      const collision = checkCollision(head);\n      if (collision) {\n        alert('Game Over');\n        return [{ x: 0, y: 0 }]; // Reset the snake\n      }\n  \n      // Check if food is eaten\n      const foodEaten = eatFood(head);\n      if (!foodEaten) {\n        newSnake.pop(); // Remove tail only if food not eaten\n      }\n  \n      newSnake.unshift(head); // Add new head\n  \n      return newSnake;\n    });\n  }, [direction, snake, food]);\n  \n\n  useEffect(() => {\n    // Game loop\n    const gameLoop = setInterval(moveSnake, 200); // Move snake every 200ms\n    return () => clearInterval(gameLoop);\n  }, [moveSnake]);\n\n  // Handle key press for snake direction\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.keyCode) {\n        case 37: // Left arrow\n          setDirection('LEFT');\n          break;\n        case 38: // Up arrow\n          setDirection('UP');\n          break;\n        case 39: // Right arrow\n          setDirection('RIGHT');\n          break;\n        case 40: // Down arrow\n          setDirection('DOWN');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  const checkCollision = head => {\n    // Check boundary collision\n    if (head.x >= 20 || head.x < 0 || head.y >= 20 || head.y < 0) {\n      return true;\n    }\n  \n    // Check self collision\n    for (const segment of snake) {\n      if (head.x === segment.x && head.y === segment.y) {\n        return true;\n      }\n    }\n  \n    return false;\n  };\n  \n  return (\n    <div>\n      <h1>Snake Game</h1>\n      <div className=\"game-area\">\n        {snake.map((segment, index) => (\n          <div key={index} className=\"snake-segment\" style={{ left: `${segment.x * 20}px`, top: `${segment.y * 20}px` }} />\n        ))}\n        <div className=\"food\" style={{ left: `${food.x * 20}px`, top: `${food.y * 20}px` }} />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}