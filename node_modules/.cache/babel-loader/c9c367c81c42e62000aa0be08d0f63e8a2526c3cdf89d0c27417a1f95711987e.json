{"ast":null,"code":"var _jsxFileName = \"/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/PlayerContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { usePlayer } from '../PlayerContext'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    settings,\n    updateSettings\n  } = usePlayer();\n  const [localSettings, setLocalSettings] = useState(settings);\n  useEffect(() => {\n    // Update local state when the global settings change\n    setLocalSettings(settings);\n  }, [settings]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLocalSettings({\n      ...localSettings,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateSettings(localSettings);\n    // Here, you should also update the settings in the backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Snake Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"snakeColor\",\n          value: localSettings.snakeColor,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Food Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"foodColor\",\n          value: localSettings.foodColor,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"gI3nghIK30uGGvdWc0de1/c3Pv8=\", false, function () {\n  return [usePlayer];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","usePlayer","jsxDEV","_jsxDEV","Settings","_s","settings","updateSettings","localSettings","setLocalSettings","handleChange","e","name","value","target","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","snakeColor","onChange","foodColor","_c","$RefreshReg$"],"sources":["/Users/katiashteyn/Programming/Web Dev/Mini-Projects/snake-game/client/src/PlayerContext.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { usePlayer } from '../PlayerContext'; // Adjust the path as needed\n\nconst Settings = () => {\n  const { settings, updateSettings } = usePlayer();\n  const [localSettings, setLocalSettings] = useState(settings);\n\n  useEffect(() => {\n    // Update local state when the global settings change\n    setLocalSettings(settings);\n  }, [settings]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setLocalSettings({ ...localSettings, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateSettings(localSettings);\n    // Here, you should also update the settings in the backend\n  };\n\n  return (\n    <div>\n      <h2>Game Settings</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Snake Color:</label>\n          <input\n            type=\"text\"\n            name=\"snakeColor\"\n            value={localSettings.snakeColor}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>Food Color:</label>\n          <input\n            type=\"text\"\n            name=\"foodColor\"\n            value={localSettings.foodColor}\n            onChange={handleChange}\n          />\n        </div>\n        {/* Add more settings fields as needed */}\n        <div>\n          <button type=\"submit\">Save Settings</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAGN,SAAS,CAAC,CAAC;EAChD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAACO,QAAQ,CAAC;EAE5DN,SAAS,CAAC,MAAM;IACd;IACAS,gBAAgB,CAACH,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCL,gBAAgB,CAAC;MAAE,GAAGD,aAAa;MAAE,CAACI,IAAI,GAAGC;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBT,cAAc,CAACC,aAAa,CAAC;IAC7B;EACF,CAAC;EAED,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAMmB,QAAQ,EAAEP,YAAa;MAAAE,QAAA,gBAC3Bd,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAO;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BlB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXX,IAAI,EAAC,YAAY;UACjBC,KAAK,EAAEL,aAAa,CAACgB,UAAW;UAChCC,QAAQ,EAAEf;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BlB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXX,IAAI,EAAC,WAAW;UAChBC,KAAK,EAAEL,aAAa,CAACkB,SAAU;UAC/BD,QAAQ,EAAEf;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENlB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAQoB,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjDID,QAAQ;EAAA,QACyBH,SAAS;AAAA;AAAA0B,EAAA,GAD1CvB,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}